--Desafio: nome dos produtos

SELECT TN.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(TN.QUANTIDADE) AS [QUANTIDADE TOTAL] 
FROM ITENS_NOTAS_FISCAIS TN
INNER JOIN TABELA_DE_PRODUTOS TP
ON TN.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY TN.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO HAVING SUM(TN.QUANTIDADE) > 394000
ORDER BY SUM(TN.QUANTIDADE) DESC;


--Desafio: buscando os sabores dos produtos mais vendidos

SELECT DISTINCT SABOR FROM TABELA_DE_PRODUTOS
WHERE CODIGO_DO_PRODUTO 
IN (
SELECT TN.CODIGO_DO_PRODUTO 
FROM ITENS_NOTAS_FISCAIS TN
INNER JOIN TABELA_DE_PRODUTOS TP
ON TN.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY TN.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, TP.SABOR HAVING SUM(TN.QUANTIDADE) > 394000
);


--Desafio: transformando HAVING em Subconsultas

SELECT SQ.CODIGO_DO_PRODUTO, SQ.NOME_DO_PRODUTO, SQ.QUANTIDADE
FROM(
SELECT TN.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(TN.QUANTIDADE) AS QUANTIDADE FROM ITENS_NOTAS_FISCAIS  TN
INNER JOIN TABELA_DE_PRODUTOS TP 
ON TN.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY TN.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO) SQ
WHERE SQ.QUANTIDADE > 394000
ORDER BY SQ.QUANTIDADE DESC;


--Desafio: usando visão para substituir o HAVING

CREATE VIEW VW_PRODUTOS_MAIS_VENDIDOS AS
SELECT TN.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(TN.QUANTIDADE) AS [QUANTIDADE TOTAL] 
FROM ITENS_NOTAS_FISCAIS TN
INNER JOIN TABELA_DE_PRODUTOS TP
ON TN.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
GROUP BY TN.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO;


SELECT * FROM VW_PRODUTOS_MAIS_VENDIDOS
WHERE [QUANTIDADE TOTAL] > 394000
ORDER BY [QUANTIDADE TOTAL] DESC;